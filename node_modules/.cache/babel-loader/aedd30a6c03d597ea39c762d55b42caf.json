{"ast":null,"code":"import { http, HttpResponse } from \"msw\";\nexport const handlers = [http.get(\"/locations\", _ref => {\n  let {\n    params\n  } = _ref;\n  // Please implement filtering feature here\n  const result = {\n    total_count: 0,\n    locations: []\n  };\n  return HttpResponse.json(result);\n}), http.get(\"/starred_location_ids\", () => {\n  const location_ids = JSON.parse(sessionStorage.getItem(\"starred_location_ids\") || \"[]\");\n  return HttpResponse.json({\n    location_ids\n  });\n}), http.put(\"/starred_location_ids\", _ref2 => {\n  let {\n    request\n  } = _ref2;\n\n  if (!request.body) {\n    return HttpResponse.json({\n      error_msg: \"Encountered unexpected error\"\n    }, {\n      status: 500\n    });\n  }\n\n  sessionStorage.setItem(\"starred_location_ids\", JSON.stringify(request.body));\n  return HttpResponse.json(null, {\n    status: 204\n  });\n})];","map":{"version":3,"names":["http","HttpResponse","handlers","get","params","result","total_count","locations","json","location_ids","JSON","parse","sessionStorage","getItem","put","request","body","error_msg","status","setItem","stringify"],"sources":["/Users/hyunwoochoi/Downloads/fe-homework-main-0.1.2/src/mocks/handlers.ts"],"sourcesContent":["import { http, HttpResponse } from \"msw\";\n\nimport { Location } from \"./db\";\n\ninterface LocationsResult {\n  total_count: number;\n  locations: Location[];\n}\n\ninterface LocationsPathParams {\n  page: string;\n  location_name: string;\n  robot_id: string;\n  is_starred: string;\n}\n\nexport const handlers = [\n  http.get<LocationsPathParams>(\"/locations\", ({ params }) => {\n    // Please implement filtering feature here\n\n    const result: LocationsResult = {\n      total_count: 0,\n      locations: [],\n    };\n\n    return HttpResponse.json(result);\n  }),\n\n  http.get(\"/starred_location_ids\", () => {\n    const location_ids = JSON.parse(\n      sessionStorage.getItem(\"starred_location_ids\") || \"[]\",\n    );\n\n    return HttpResponse.json({\n      location_ids,\n    });\n  }),\n\n  http.put(\"/starred_location_ids\", ({ request }) => {\n    if (!request.body) {\n      return HttpResponse.json(\n        { error_msg: \"Encountered unexpected error\" },\n        { status: 500 },\n      );\n    }\n\n    sessionStorage.setItem(\n      \"starred_location_ids\",\n      JSON.stringify(request.body),\n    );\n\n    return HttpResponse.json(null, { status: 204 });\n  }),\n];\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,YAAf,QAAmC,KAAnC;AAgBA,OAAO,MAAMC,QAAQ,GAAG,CACtBF,IAAI,CAACG,GAAL,CAA8B,YAA9B,EAA4C,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC1D;EAEA,MAAMC,MAAuB,GAAG;IAC9BC,WAAW,EAAE,CADiB;IAE9BC,SAAS,EAAE;EAFmB,CAAhC;EAKA,OAAON,YAAY,CAACO,IAAb,CAAkBH,MAAlB,CAAP;AACD,CATD,CADsB,EAYtBL,IAAI,CAACG,GAAL,CAAS,uBAAT,EAAkC,MAAM;EACtC,MAAMM,YAAY,GAAGC,IAAI,CAACC,KAAL,CACnBC,cAAc,CAACC,OAAf,CAAuB,sBAAvB,KAAkD,IAD/B,CAArB;EAIA,OAAOZ,YAAY,CAACO,IAAb,CAAkB;IACvBC;EADuB,CAAlB,CAAP;AAGD,CARD,CAZsB,EAsBtBT,IAAI,CAACc,GAAL,CAAS,uBAAT,EAAkC,SAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;;EACjD,IAAI,CAACA,OAAO,CAACC,IAAb,EAAmB;IACjB,OAAOf,YAAY,CAACO,IAAb,CACL;MAAES,SAAS,EAAE;IAAb,CADK,EAEL;MAAEC,MAAM,EAAE;IAAV,CAFK,CAAP;EAID;;EAEDN,cAAc,CAACO,OAAf,CACE,sBADF,EAEET,IAAI,CAACU,SAAL,CAAeL,OAAO,CAACC,IAAvB,CAFF;EAKA,OAAOf,YAAY,CAACO,IAAb,CAAkB,IAAlB,EAAwB;IAAEU,MAAM,EAAE;EAAV,CAAxB,CAAP;AACD,CAdD,CAtBsB,CAAjB"},"metadata":{},"sourceType":"module"}