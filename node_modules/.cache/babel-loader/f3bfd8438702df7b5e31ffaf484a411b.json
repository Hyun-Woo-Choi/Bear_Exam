{"ast":null,"code":"import { createRequestId } from \"@mswjs/interceptors\";\nimport { executeHandlers } from './utils/executeHandlers.mjs';\n\nconst getResponse = async (handlers, request) => {\n  const result = await executeHandlers({\n    request,\n    requestId: createRequestId(),\n    handlers\n  });\n  return result?.response;\n};\n\nexport { getResponse };","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AAEA,SAASC,eAAT,QAAgC,6BAAhC;;AASO,MAAMC,cAAc,OACzBC,QADyB,EAEzBC,OAFyB,KAGS;EAClC,MAAMC,SAAS,MAAMJ,gBAAgB;IACnCG,OADmC;IAEnCE,WAAWN,iBAFwB;IAGnCG;EAHmC,CAAhB,CAArB;EAMA,OAAOE,QAAQE,QAAf;AACF,CAXO","names":["createRequestId","executeHandlers","getResponse","handlers","request","result","requestId","response"],"sources":["/Users/hyunwoochoi/Downloads/fe-homework-main-0.1.2/node_modules/msw/src/core/getResponse.ts"],"sourcesContent":["import { createRequestId } from '@mswjs/interceptors'\nimport type { RequestHandler } from './handlers/RequestHandler'\nimport { executeHandlers } from './utils/executeHandlers'\n\n/**\n * Finds a response for the given request instance\n * in the array of request handlers.\n * @param handlers The array of request handlers.\n * @param request The `Request` instance.\n * @returns {Response} A mocked response, if any.\n */\nexport const getResponse = async (\n  handlers: Array<RequestHandler>,\n  request: Request,\n): Promise<Response | undefined> => {\n  const result = await executeHandlers({\n    request,\n    requestId: createRequestId(),\n    handlers,\n  })\n\n  return result?.response\n}\n"]},"metadata":{},"sourceType":"module"}