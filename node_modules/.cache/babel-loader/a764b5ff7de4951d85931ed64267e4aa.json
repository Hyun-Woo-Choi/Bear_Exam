{"ast":null,"code":"function passthrough() {\n  return new Response(null, {\n    status: 302,\n    statusText: \"Passthrough\",\n    headers: {\n      \"x-msw-intention\": \"passthrough\"\n    }\n  });\n}\n\nexport { passthrough };","map":{"version":3,"mappings":"AAgBO,SAASA,WAAT,GAA4C;EACjD,OAAO,IAAIC,QAAJ,CAAa,IAAb,EAAmB;IACxBC,QAAQ,GADgB;IAExBC,YAAY,aAFY;IAGxBC,SAAS;MACP,mBAAmB;IADZ;EAHe,CAAnB,CAAP;AAOF","names":["passthrough","Response","status","statusText","headers"],"sources":["/Users/hyunwoochoi/Downloads/fe-homework-main-0.1.2/node_modules/msw/src/core/passthrough.ts"],"sourcesContent":["import type { StrictResponse } from './HttpResponse'\n\n/**\n * Performs the intercepted request as-is.\n *\n * This stops request handler lookup so no other handlers\n * can affect this request past this point.\n * Unlike `bypass()`, this will not trigger an additional request.\n *\n * @example\n * http.get('/resource', () => {\n *   return passthrough()\n * })\n *\n * @see {@link https://mswjs.io/docs/api/passthrough `passthrough()` API reference}\n */\nexport function passthrough(): StrictResponse<any> {\n  return new Response(null, {\n    status: 302,\n    statusText: 'Passthrough',\n    headers: {\n      'x-msw-intention': 'passthrough',\n    },\n  }) as StrictResponse<any>\n}\n"]},"metadata":{},"sourceType":"module"}