{"ast":null,"code":"import { format } from \"outvariant\";\nconst LIBRARY_PREFIX = \"[MSW]\";\n\nfunction formatMessage(message) {\n  for (var _len = arguments.length, positionals = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    positionals[_key - 1] = arguments[_key];\n  }\n\n  const interpolatedMessage = format(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\n\nfunction warn(message) {\n  for (var _len2 = arguments.length, positionals = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    positionals[_key2 - 1] = arguments[_key2];\n  }\n\n  console.warn(formatMessage(message, ...positionals));\n}\n\nfunction error(message) {\n  for (var _len3 = arguments.length, positionals = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    positionals[_key3 - 1] = arguments[_key3];\n  }\n\n  console.error(formatMessage(message, ...positionals));\n}\n\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\n\nclass InternalError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"InternalError\";\n  }\n\n}\n\nexport { InternalError, devUtils };","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,MAAMC,iBAAiB,OAAvB;;AAKA,SAASC,aAAT,CAAuBC,OAAvB,EAAuE;EAAA,kCAA5BC,WAA4B;IAA5BA,WAA4B;EAAA;;EACrE,MAAMC,sBAAsBL,OAAOG,OAAP,EAAgB,GAAGC,WAAnB,CAA5B;EACA,OAAO,GAAGH,cAAc,IAAII,mBAAmB,EAA/C;AACF;;AAKA,SAASC,IAAT,CAAcH,OAAd,EAA4D;EAAA,mCAA1BC,WAA0B;IAA1BA,WAA0B;EAAA;;EAC1DG,QAAQD,IAAR,CAAaJ,cAAcC,OAAd,EAAuB,GAAGC,WAA1B,CAAb;AACF;;AAKA,SAASI,KAAT,CAAeL,OAAf,EAA6D;EAAA,mCAA1BC,WAA0B;IAA1BA,WAA0B;EAAA;;EAC3DG,QAAQC,KAAR,CAAcN,cAAcC,OAAd,EAAuB,GAAGC,WAA1B,CAAd;AACF;;AAEO,MAAMK,WAAW;EACtBP,aADsB;EAEtBI,IAFsB;EAGtBE;AAHsB,CAAjB;;AAYA,MAAME,aAAN,SAA4BC,KAA5B,CAAkC;EACvCC,YAAYT,OAAZ,EAA6B;IAC3B,MAAMA,OAAN;IACA,KAAKU,IAAL,GAAY,eAAZ;EACF;;AAJuC","names":["format","LIBRARY_PREFIX","formatMessage","message","positionals","interpolatedMessage","warn","console","error","devUtils","InternalError","Error","constructor","name"],"sources":["/Users/hyunwoochoi/Downloads/fe-homework-main-0.1.2/node_modules/msw/src/core/utils/internal/devUtils.ts"],"sourcesContent":["import { format } from 'outvariant'\n\nconst LIBRARY_PREFIX = '[MSW]'\n\n/**\n * Formats a given message by appending the library's prefix string.\n */\nfunction formatMessage(message: string, ...positionals: any[]): string {\n  const interpolatedMessage = format(message, ...positionals)\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`\n}\n\n/**\n * Prints a library-specific warning.\n */\nfunction warn(message: string, ...positionals: any[]): void {\n  console.warn(formatMessage(message, ...positionals))\n}\n\n/**\n * Prints a library-specific error.\n */\nfunction error(message: string, ...positionals: any[]): void {\n  console.error(formatMessage(message, ...positionals))\n}\n\nexport const devUtils = {\n  formatMessage,\n  warn,\n  error,\n}\n\n/**\n * Internal error instance.\n * Used to differentiate the library errors that must be forwarded\n * to the user from the unhandled exceptions. Use this if you don't\n * wish for the error to be coerced to a 500 fallback response.\n */\nexport class InternalError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'InternalError'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}